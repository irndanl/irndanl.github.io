{
  "hash": "9f44d92b08b06c9f92704e0aa42f1354",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization 4\"\nauthor: \"Isabella Nicastro\"\ndate: \"2024-02-21\"\ncategories: [ggplot, code, analysis]\n---\n\n\n\n\n# Question 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunemp_house_prices <- read_csv(\n  'https://bcdanl.github.io/data/unemp_house_prices.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 25704 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): state\ndbl  (3): unemploy_perc, house_price_index, house_price_perc\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#| fig-height: 9\n\nunemp_house_prices |> \n  filter(year(date) >= 2008) |> \n  ggplot(aes(x=date , y = unemploy_perc/100)) +\n  geom_line(color='black') +\n  geom_area(fill = 'lightblue') +\n  facet_geo(~ state) +\n  scale_x_date(breaks = '2 years',\n               labels = date_format('%y')) +\n  scale_y_percent() +\n  labs(title = \"\",\n    x = \"\",\n    y = \"Unemployment Rate (%)\") +\n  theme(strip.text.x = element_text(size = 6),\n        axis.text.x = element_text(size = rel(.75)))\n```\n\n::: {.cell-output-display}\n![](homework_4_Nicastro-Isabella_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# Question 2\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    map\n```\n:::\n\n```{.r .cell-code}\nelection_panel <- read_csv(\n  'https://bcdanl.github.io/data/election_panel.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 18944 Columns: 10\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): state, state_po, county_name, id, candidate_DEMOCRAT, candidate_REP...\ndbl (4): year, county_fips, pct_DEMOCRAT, pct_REPUBLICAN\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncounty_map <- socviz::county_map\n\n\nalaska_2000 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2000,\n         pct_DEMOCRAT = NA)\n\nalaska_2004 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2004,\n         pct_DEMOCRAT = NA)\n\nalaska_2008 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2008,\n         pct_DEMOCRAT = NA)\n\nalaska_2012 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2012,\n         pct_DEMOCRAT = NA)\n\nalaska_2016 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2016,\n         pct_DEMOCRAT = NA)\nalaska_2020 <- county_map |> \n  filter(str_sub(id, 1, 2) == '02') |> \n  mutate(year = 2020,\n         pct_DEMOCRAT = NA)\n\nalaska_map <- rbind(alaska_2000,alaska_2004,alaska_2008, alaska_2012,alaska_2016, alaska_2020) |> \n  select(id, long, lat, group, pct_DEMOCRAT, year) |> \n  relocate(id, long, lat, group, pct_DEMOCRAT, year)\n\n\n\nelection_panel <- election_panel |> \n  left_join(county_map, by = c('id'))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(election_panel, county_map, by = c(\"id\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n:::\n\n```{.r .cell-code}\nelection_panel2 <- election_panel |> \n  select(id, long, lat, group, pct_DEMOCRAT, year) \n\n\nelection_panel2 <- election_panel2 |> \n  rbind(alaska_map)\n\np0 <- ggplot(data = election_panel2,\n             mapping = aes(x = long, y = lat,\n                 group = group,\n                 fill = pct_DEMOCRAT))\n\np1 <- p0 + geom_polygon(color = \"gray90\", size = 0.05)  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\np2 <- p1 + scale_fill_gradient(low = 'white', high = '#2E74C0')\n\np2 + theme_map() + facet_wrap(~ year, ncol = 3) +\n    theme(legend.position = \"bottom\",\n          strip.background = element_blank()) +\n    labs(fill = \"Percent Democrat \",\n         title = \"U.S Presidential Election, 2000-2020 \")  \n```\n\n::: {.cell-output-display}\n![](homework_4_Nicastro-Isabella_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n<!-- References: -->\n\n<!-- -   [Fundamentals of Data Visualization by Claus O. Wilke](https://clauswilke.com/dataviz) -->\n<!-- -   [Data Visualization: A practical introduction by Kieran Healy](https://socviz.co) -->\n",
    "supporting": [
      "homework_4_Nicastro-Isabella_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}