[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project 👏\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) 🚙 🚚 🚐.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nData Visualization 4\n\n\n\n\n\n\n\n\n\nFeb 21, 2024\n\n\nIsabella Nicastro\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nData Visualization 2\n\n\n\n\n\n\n\n\n\nFeb 21, 2024\n\n\nIsabella Nicastro\n\n\n9 min\n\n\n\n\n\n\n  \n\n\n\n\nData Visualization 1\n\n\n\n\n\n\n\n\n\nFeb 21, 2024\n\n\nIsabella Nicastro\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Isabella Nicastro",
    "section": "",
    "text": "Isabella Nicastro majors in Finance and minors in Data Analytics at SUNY Geneseo. When not working on finance or data analytics, Isabella enjoys spending time playing lacrosse and spending time with family and friends."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Isabella Nicastro",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Finance | Aug 2020 - May 2024  Minor in Data Analytics"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Isabella Nicastro",
    "section": "Experience",
    "text": "Experience\nStarbucks Analytics | Data Analyst Intern | May 2024 - Aug 2024"
  },
  {
    "objectID": "posts/homework1/homework_1.html",
    "href": "posts/homework1/homework_1.html",
    "title": "Data Visualization 1",
    "section": "",
    "text": "Question 1 homework #1\n\nncdc_temp &lt;- read_csv('https://bcdanl.github.io/data/ncdc_temp_cleaned.csv')\n\nRows: 1464 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): station_id, month, flag, location\ndbl  (2): day, temperature\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndate_selected &lt;- c('0000-01-01','0000-04-01','0000-07-01','0000-10-01','0000-12-31')\ndf &lt;- filter(ncdc_temp, date %in% date_selected)\np &lt;- ggplot(data = ncdc_temp,\n            mapping =\n              aes( x = date,\n                   y = temperature ) )\n\np + geom_line( aes( color = location ),show.legend = F) +\n  geom_point(data = df) +\n  labs(x = 'month') + \n  scale_x_date(breaks = as.Date(date_selected),\n               date_labels = \"%b\")\n\n\n\n\nggplot is a data visualization tool\n\nggplot(mpg) +\n  geom_boxplot(aes(x=class,y=hwy))\n\n\n\n\nQuestion 2 homework #1\n\np_1 &lt;- ggplot(data = ncdc_temp,\n            mapping =\n              aes(x = temperature,\n                  y = month))\np_1 + geom_boxplot(fill = \"grey70\") +\n  labs(x = NULL) +\n  coord_flip()\n\n\n\n\nQuestion 3 Homework #1\n\nlibrary(ggridges)\n\np &lt;- ggplot(data = ncdc_temp,\n            mapping = \n              aes(x = temperature,\n                  y = month))\np + geom_density_ridges(alpha = 0.3, fill = \"blue\")\n\nPicking joint bandwidth of 3.12\n\n\n\n\n\n\ncars &lt;- mtcars\n\nc&lt;- ggplot(cars, aes(disp, mpg)) +\n        geom_point(aes(color = hp))\nc + labs(x= \"displacement\")+ labs(y= \"fuel efficiency\")\n\n\n\n\n\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')\n\nRows: 51 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): region, division, state\ndbl (4): pop2000, pop2010, popgrowth, area\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npg&lt;- ggplot(popgrowth_df, aes(reorder(state, popgrowth), popgrowth, fill = region)) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        coord_flip() +\n        theme(legend.position = c(0.8, 0.2))\n\npg + labs(y= \"population growth 2000 to 2010\")+ labs(x= \"reorder state, pop growth\")\n\n\n\n\n\nmale_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\nRows: 83 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): sex, sport\ndbl (11): rcc, wcc, hc, hg, ferr, bmi, ssf, pcBfat, lbm, height, weight\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nma&lt;- ggplot(male_Aus, aes(x=height, y= pcBfat, group=sport)) +\n  geom_point(aes(shape=sport, color= sport)) + \n  scale_color_manual(values = c('red','grey','grey','grey','grey'))\n\nma + labs(x= \"height(cm)\")+ labs(y= \"% body fat\")\n\n\n\n\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\nRows: 756 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): class, sex\ndbl (1): age\nlgl (1): survived\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# t &lt;- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))\n# data&lt;- melt(titanic$age)\nt_2 &lt;- titanic %&gt;% mutate(sex = 'female')\nt_3 &lt;- titanic %&gt;% mutate(sex = 'male')\nt4 &lt;- rbind(t_2, t_3)\n\nggplot( mapping= aes(x=age, y = stat(count) ) )  + geom_density(data = t4, fill = 'grey',color = 'grey') + geom_density(data = titanic, aes(fill=sex)) + facet_wrap(sex~.)\n\nWarning: `stat(count)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\ncows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')\n\nRows: 80 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): age, breed\ndbl (1): butterfat\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nt &lt;- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))\n# data&lt;- melt(cows_filtered$butterfat)\nggplot(cows_filtered, aes(x=butterfat, fill=breed, color = breed)) + geom_density(alpha=0.25)"
  },
  {
    "objectID": "posts/homework2/homework_2.html",
    "href": "posts/homework2/homework_2.html",
    "title": "Data Visualization 2",
    "section": "",
    "text": "Add a web-page of the project proposal to your website."
  },
  {
    "objectID": "posts/homework2/homework_2.html#mpg-and-a-type-of-cars",
    "href": "posts/homework2/homework_2.html#mpg-and-a-type-of-cars",
    "title": "Data Visualization 2",
    "section": "MPG and a Type of Cars",
    "text": "MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) :blue_car: :truck: :minibus:.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/homework2/homework_2.html#q2a.",
    "href": "posts/homework2/homework_2.html#q2a.",
    "title": "Data Visualization 2",
    "section": "Q2a.",
    "text": "Q2a.\nBelow is the data.frame for Q2a:\n\nhdi_corruption &lt;- read_csv(\n  'https://bcdanl.github.io/data/hdi_corruption.csv')\n\nRows: 704 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): country, region\ndbl (3): year, cpi, hdi\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAnswer:\n\ncountry_list&lt;- c(\"Argentina\", \"China\", \"Egypt\", \"Greece\", \"South Africa\", \"United States\", \"Germany\", \"Singapore\", \"Norway\", \"Senegal\")\n\nhdi_corruption &lt;- hdi_corruption |&gt; \n  filter(year == 2014) |&gt; \n  mutate(country = ifelse(country %in% country_list, country, \"\"))\n\nc &lt;-ggplot(hdi_corruption, aes(x=cpi, y=hdi))+ geom_point((aes(color = region, size = 0.6, alpha = 0.5)))+\n  geom_smooth(se=FALSE, formula = y ~ log(x), method = lm)+\n  theme(legend.position = \"top\")+\n  geom_text_repel(aes(label = country)) +\n  labs(color = \"Region\", x = \"Corruption Perceptions Index, 2014 (100 = least corrupt)\", y = \"Human Development Index, 2014 (1.0 = most developed\" )\nplot(c)\n\n\n\n# problems:points larger and slightly transparent,"
  },
  {
    "objectID": "posts/homework2/homework_2.html#q2b",
    "href": "posts/homework2/homework_2.html#q2b",
    "title": "Data Visualization 2",
    "section": "Q2b",
    "text": "Q2b\n\nDownload the file labor_supply.zip from the Google Drive. Then, extract labor_supply.zip, so that you can access the labor_supply.csv file.\nVariable description in labor_supply.csv\n\nSEX: 1 if Male; 2 if Female; 9 if NIU (Not in universe)\nNCHLT5: Number of own children under age 5 in a household; 9 if 9+\nLABFORCE: 0 if NIU or members of the armed forces; 1 if not in the labor force; 2 if in the labor force.\nASECWT: sample weight\n\nA sample weight of each observation means how much population each observation represents.\n\nIf you sum ASECWT for each year, you get the size of yearly population in the US.\n\nHouseholds with LABFORCE == 0 is not in labor force.\nLabor force participation rate can be calculated by:\n\n\\[\n(\\text{Labor Force Participation Rate}) \\, = \\, \\frac{(\\text{Size of population in labor force})}{(\\text{Size of civilian population that are not members of the armed force})}\n\\]\nAnswer:\n\nb&lt;- read_csv(\"/Users/isabellanicastro/Downloads/labor_supply.csv\")\n\nb &lt;- b |&gt; \n  filter(LABFORCE != 0)\n\nb$has_children &lt;- ifelse(b$NCHLT5 == 0, \"No Child Under Age 5 in Household\", \"Having Children Under Age 5 in Household\")\nb$in_labor_force &lt;- ifelse(b$LABFORCE == 2, 1, 0)\nb$SEX &lt;- ifelse(b$SEX == 1, \"Male\", \"Female\")\n\nb_sum &lt;- b |&gt;\n  group_by(has_children, SEX, YEAR)|&gt;\n  summarise(LPR = (sum(ASECWT * in_labor_force))/sum(ASECWT) ) |&gt;\n  mutate(has_children = factor(has_children,\n                               levels = c(\"Having Children Under Age 5 in Household\",  \"No Child Under Age 5 in Household\")))\n\nb_sum_2022 &lt;- b_sum |&gt; \n  filter(YEAR == 2022)\n\nb_graph &lt;- ggplot(b_sum, aes(x= YEAR, y= LPR))+\n  geom_line(show.legend = FALSE, aes(color= factor(SEX), size= 1))+\n  geom_label_repel(data = b_sum_2022, aes(label = as.character(SEX)), box.padding = 2)+\n  scale_x_continuous(breaks = seq(1982, 2022, 4))+ \n  scale_y_continuous(labels = scales::percent)+\n  facet_wrap(has_children ~.)+\n  labs( x= \"Year\", y= \"Labor Force Participation Rate\", Title = \"Fertility and Labor Supply in the U.S.\", subtitle= \"1982-2022\", caption= \"Data:IPUMS-CPS, University of Minnesota, www.jpums.org\" )\nb_graph\n\n\n\n\n\n```{r\n\n&lt;br&gt;&lt;br&gt;\n\n## Q2c\n\nBelow is the data.frame for Q2c:\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"ggcorrplot\")\nlibrary(ggcorrplot) # to create correlation heatmaps using ggcorrplot()\nbeer_mkt &lt;- read_csv('https://bcdanl.github.io/data/beer_markets.csv')\n\nRows: 73115 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (13): _purchase_desc, brand, container, market, buyertype, income, age, ...\ndbl  (5): hh, quantity, dollar_spent, beer_floz, price_per_floz\nlgl  (6): promo, childrenUnder6, children6to17, microwave, dishwasher, singl...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrmarkdown::paged_table(beer_mkt)\n\n\n\n  \n\n\n:::\n\nMake a correlation heat-map with variables that are either strongly correlated or promo-related.\nThe variables are selected by how high the mean value of the absolute value of correlations with the variable is (top 13-15 variables).\nYou can start with the data.frame, beer_dummies:\n\n\nbeer_dummies &lt;- beer_mkt %&gt;% select(-hh, -market) \nreg &lt;- lm(data = beer_dummies,\n          beer_floz ~ .)\nbeer_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\nbeer_dummies &lt;- cbind(beer_mkt$beer_floz ,beer_dummies)\nbeer_dummies &lt;- beer_dummies %&gt;% \n  rename(beer_floz = `beer_mkt$beer_floz`)\n\n\n\ncolnames(beer_dummies)\ncolnames(beer_1)\n\nbeer_1 &lt;- beer_dummies |&gt; \n  select(dollar_spent, beer_floz, price_per_floz, `brandBUSCH LIGHT`, `brandCOORS LIGHT`, `brandMILLER LITE`, `brandNATURAL LIGHT`, `containerNON REFILLABLE BOTTLE`, promoTRUE, buyertypemarried, children6to17TRUE, `age50+`, employmentnone) |&gt; \n  mutate(`BUD LIGHT` = ifelse(`brandBUSCH LIGHT`+ `brandCOORS LIGHT`+ `brandMILLER LITE`+ `brandNATURAL LIGHT`== 0, 1, 0) )|&gt; \n  rename(`BUSCH LIGHT`=`brandBUSCH LIGHT`,\n         `COORS LIGHT`=`brandCOORS LIGHT`,\n         `MILLER LITE`=`brandMILLER LITE`,\n         `NATURAL LIGHT`=`brandNATURAL LIGHT`,\n         `NON REFILLABLE BOTTLE`= `containerNON REFILLABLE BOTTLE`) |&gt; \n  relocate(dollar_spent, beer_floz, price_per_floz,`BUD LIGHT`, `BUSCH LIGHT`,  \n           `COORS LIGHT`, `MILLER LITE`,  `NATURAL LIGHT`, `NON REFILLABLE BOTTLE`, \n           promoTRUE, buyertypemarried, children6to17TRUE, `age50+`, employmentnone)\n\ncorr &lt;- cor(beer_1)\n\nlibrary(ggcorrplot)\n\nggcorrplot(corr,\n          lab = TRUE)+\n  theme(legend.key.height = unit(1, \"inch\"))\n\n\nTo calculate a correlation between numeric variables in data.frame, use cor(data.frame)\nThen, make a correlation heat-map for NY markets with the same selection of variables.\n\nNY markets are such that whose market value is either ALBANY, BUFFALO-ROCHESTER, URBAN NY, SUBURBAN NY, EXURBAN NY, RURAL NEW YORK, or SYRACUSE.\n\n\nAnswer:\n\nbeer_dummies &lt;- beer_mkt |&gt; \n  filter(market %in% c(\"ALBANY\", \"BUFFALO-ROCHESTER\", \"URBAN NY\", \"SUBURBAN NY\", \"EXURBAN NY\", \"RURAL NEW YORK\", \"SYRACUSE\") ) |&gt; \n  select(-hh, -market) \nreg &lt;- lm(data = beer_dummies,\n          beer_floz ~ .)\n\n\nbeer_mkt_NY &lt;- beer_mkt |&gt; \n  filter(market %in% c(\"ALBANY\", \"BUFFALO-ROCHESTER\", \"URBAN NY\", \"SUBURBAN NY\", \"EXURBAN NY\", \"RURAL NEW YORK\", \"SYRACUSE\") )\n\nbeer_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\nbeer_dummies &lt;- cbind(beer_mkt_NY$beer_floz ,beer_dummies)\nbeer_dummies &lt;- beer_dummies %&gt;% \n  rename(beer_floz = `beer_mkt_NY$beer_floz`)\n\n\nbeer_1 &lt;- beer_dummies |&gt; \n  select(dollar_spent, beer_floz, price_per_floz, `brandBUSCH LIGHT`, `brandCOORS LIGHT`, `brandMILLER LITE`, `brandNATURAL LIGHT`, `containerNON REFILLABLE BOTTLE`, promoTRUE, buyertypemarried, children6to17TRUE, `age50+`, employmentnone) |&gt; \n  mutate(`BUD LIGHT` = ifelse(`brandBUSCH LIGHT`+ `brandCOORS LIGHT`+ `brandMILLER LITE`+ `brandNATURAL LIGHT`== 0, 1, 0) )|&gt; \n  rename(`BUSCH LIGHT`=`brandBUSCH LIGHT`,\n         `COORS LIGHT`=`brandCOORS LIGHT`,\n         `MILLER LITE`=`brandMILLER LITE`,\n         `NATURAL LIGHT`=`brandNATURAL LIGHT`,\n         `NON REFILLABLE BOTTLE`= `containerNON REFILLABLE BOTTLE`) |&gt; \n  relocate(dollar_spent, beer_floz, price_per_floz,`BUD LIGHT`, `BUSCH LIGHT`,  \n           `COORS LIGHT`, `MILLER LITE`,  `NATURAL LIGHT`, `NON REFILLABLE BOTTLE`, \n           promoTRUE, buyertypemarried, children6to17TRUE, `age50+`, employmentnone)\n\ncorr &lt;- cor(beer_1)\n\nggcorrplot(corr,\n          lab = TRUE)+\n  theme(legend.key.height = unit(1, \"inch\"))"
  },
  {
    "objectID": "Nicastro_HW1.html",
    "href": "Nicastro_HW1.html",
    "title": "Data Visualization 1",
    "section": "",
    "text": "Question 1 homework #1\n\nncdc_temp &lt;- read_csv('https://bcdanl.github.io/data/ncdc_temp_cleaned.csv')\ndate_selected &lt;- c('0000-01-01','0000-04-01','0000-07-01','0000-10-01','0000-12-31')\ndf &lt;- filter(ncdc_temp, date %in% date_selected)\np &lt;- ggplot(data = ncdc_temp,\n            mapping =\n              aes( x = date,\n                   y = temperature ) )\n\np + geom_line( aes( color = location ),show.legend = F) +\n  geom_point(data = df) +\n  labs(x = 'month') + \n  scale_x_date(breaks = as.Date(date_selected),\n               date_labels = \"%b\")\n\n\n\n\nggplot is a data visualization tool\n\nggplot(mpg) +\n  geom_boxplot(aes(x=class,y=hwy))\n\n\n\n\nQuestion 2 homework #1\n\np_1 &lt;- ggplot(data = ncdc_temp,\n            mapping =\n              aes(x = temperature,\n                  y = month))\np_1 + geom_boxplot(fill = \"grey70\") +\n  labs(x = NULL) +\n  coord_flip()\n\n\n\n\nQuestion 3 Homework #1\n\nlibrary(ggridges)\n\np &lt;- ggplot(data = ncdc_temp,\n            mapping = \n              aes(x = temperature,\n                  y = month))\np + geom_density_ridges(alpha = 0.3, fill = \"blue\")\n\n\n\n\n\ncars &lt;- mtcars\n\nc&lt;- ggplot(cars, aes(disp, mpg)) +\n        geom_point(aes(color = hp))\nc + labs(x= \"displacement\")+ labs(y= \"fuel efficiency\")\n\n\n\n\n\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')\n\n\npg&lt;- ggplot(popgrowth_df, aes(reorder(state, popgrowth), popgrowth, fill = region)) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        coord_flip() +\n        theme(legend.position = c(0.8, 0.2))\n\npg + labs(y= \"population growth 2000 to 2010\")+ labs(x= \"reorder state, pop growth\")\n\n\n\n\n\nmale_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\nma&lt;- ggplot(male_Aus, aes(x=height, y= pcBfat, group=sport)) +\n  geom_point(aes(shape=sport, color= sport)) + \n  scale_color_manual(values = c('red','grey','grey','grey','grey'))\n\nma + labs(x= \"height(cm)\")+ labs(y= \"% body fat\")\n\n\n\n\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\n# t &lt;- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))\n# data&lt;- melt(titanic$age)\nt_2 &lt;- titanic %&gt;% mutate(sex = 'female')\nt_3 &lt;- titanic %&gt;% mutate(sex = 'male')\nt4 &lt;- rbind(t_2, t_3)\n\nggplot( mapping= aes(x=age, y = stat(count) ) )  + geom_density(data = t4, fill = 'grey',color = 'grey') + geom_density(data = titanic, aes(fill=sex)) + facet_wrap(sex~.)\n\n\n\n\n\ncows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')\n\nt &lt;- data.frame(v1=rnorm(100),v2=rnorm(100,1,1),v3=rnorm(100,0,2))\n# data&lt;- melt(cows_filtered$butterfat)\nggplot(cows_filtered, aes(x=butterfat, fill=breed, color = breed)) + geom_density(alpha=0.25)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "Nicastro-project-abstract.html",
    "href": "Nicastro-project-abstract.html",
    "title": "DANL Project",
    "section": "",
    "text": "1 Abstract\nThrough surveying the SUNY Geneseo student body, we plan to explore what determines the level of financial literacy among students at SUNY Geneseo. The survey contains questions that address students’ demographics, academic background, family support through college, personal finance experience, and a financial literacy quiz. The sample size is 403 respondents, which is 10% of the population at SUNY Geneseo. We have noticed many students struggling on campus with the basics of personal finance and want to address the growing concern of how this could affect their success through college and in the future. We are interested in how the students’ family or academic background is associated with their financial literacy. Based on this exploration we plan to make some policy and curriculum suggestions on how we can improve the overall understanding of personal finance at SUNY Geneseo. Based on this research we plan to design a curriculum that will be offered to all students through the Geneseo Opportunities for Leadership Development (GOLD) program and will address the largest educational gaps that were identified in the survey. This course will be evaluated by administering the same financial literacy quiz following completion of the course and will offer insight into whether or not there is a substantial change in the students’ personal finance knowledge."
  },
  {
    "objectID": "project-capstone.html",
    "href": "project-capstone.html",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "",
    "text": "Through surveying the SUNY Geneseo student body, we plan to explore what determines the level of financial literacy among students at SUNY Geneseo. The survey contains questions that address students’ demographics, academic background, family support through college, personal finance experience, and a financial literacy quiz. The sample size is 403 respondents, which is 10% of the population at SUNY Geneseo. We have noticed many students struggling on campus with the basics of personal finance and want to address the growing concern of how this could affect their success through college and in the future. We are interested in how the students’ family or academic background is associated with their financial literacy. Based on this exploration we plan to make some policy and curriculum suggestions on how we can improve the overall understanding of personal finance at SUNY Geneseo. Based on this research we plan to design a curriculum that will be offered to all students through the Geneseo Opportunities for Leadership Development (GOLD) program and will address the largest educational gaps that were identified in the survey. This course will be evaluated by administering the same financial literacy quiz following completion of the course and will offer insight into whether or not there is a substantial change in the students’ personal finance knowledge."
  },
  {
    "objectID": "project-capstone.html#survey-design",
    "href": "project-capstone.html#survey-design",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "1.1 Survey Design",
    "text": "1.1 Survey Design\n\n1.1.1 Survey Questionaire\nThis survey is being commissioned by the SUNY Geneseo School of Business in partnership with the Geneseo Opportunities for Leadership Development (GOLD) program to gauge the financial literacy of the college’s student body. The college feels strongly that every SUNY Geneseo student regardless of background or area of academic interest should feel empowered with knowledge on how to manage their personal finances and make good financial decisions. This survey will help the School of Business in its development of financial literacy programming for the benefit all students.\n\nStudent Geneseo Email Address\n\nWhat year did you graduate high school?\n\nWhat NY county did you graduate high school from?\nChoose which option encapsulates the most of your high school education.\nYear at SUNY Geneseo?\n\nAre you a transfer student?\n\nUndergraduate Major(s)\n\nUndergraduate Minor(s)/ Concentration(s)\nPre-Professional Program(s)\nGraduate Degree\nWhat would you rate your personal finance knowledge?\n\nHow old were you when you got your first job?\n\nDid you file your own taxes in 2023?\n\nDid a parent or family member set up a college fund for you to help you afford your education?\n\nDo your parents/ guardians work, or have worked, in finance, banking, insurance, or real estate?\n\nDo you have a credit card under your name?\n\nIf you do have a credit card, how old were you when you first got your own credit card?\nDo you pay rent?\n\nDo you own a house?\nDo you make car payments?\n\nDo you currently have a brokerage, individual retirement account (IRA), or other savings account where you invest your money in stocks, bonds, CDs, options, crypto-currency, or other liquid market asset?\nDid you take any version of a personal finance course prior to attending college?For example, a class in high school or Junior Achievement. Have you ever taken a Finance course at SUNY Geneseo?\n\nQuizzes\n\n\nSuppose that by the beginning of year 2026 your income has doubled and prices of all goods have doubled too.\nIn 2026, how much will you be able to buy with your 2026 income?\n\nTrue or False: A 15 year mortgage typically requires higher monthly payments than a 30 year mortgage but the total interest over the life of the loan tends to be less.\n\nWhen you invest in an employer’s retirement savings plan such as a 401(k), your contributions are taxed:\n\nIn general, investments that are riskier tend to provide higher returns over time that investments with less risk.\n\nSuppose you have $100 in a savings account earning 2 percent interest compounded annually. After 5 years, how much would you have?\n\nWhich of the following statements about Annual Percentage Rate (APR) is correct?\n\nWhy is it important to save money?\n\nIf a self study personal finance course was offered as a GOLD certificate at SUNY Geneseo would you be interested?"
  },
  {
    "objectID": "project-capstone.html#preparation-of-data",
    "href": "project-capstone.html#preparation-of-data",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "2.1 Preparation of Data",
    "text": "2.1 Preparation of Data\n\n\n\ntable &lt;- read_csv(\"Items.csv\")\n\nDT::datatable(table)\n\n\n\n\n\n\ndf &lt;- read_csv(\"survey-raw.csv\")\n\nvar_desc &lt;- colnames(df)\ncolnames(df) &lt;- c(\"time_stamp\",\n                  \"email\",\n                  \"score\",\n                  \"grad_yr\",\n                  \"county\",\n                  \"year_geneseo\",\n                  \"transfer\",\n                  \"major\",\n                  \"minor\",\n                  \"prof_program\",\n                  \"graduate_degree\",\n                  \"self_eval\",\n                  \"age_first_job\",\n                  \"file_tax\",\n                  \"college_fund\",\n                  \"parent_job\",\n                  \"credit_card\",\n                  \"age_credit_card\",\n                  \"pay_rent\",\n                  \"own_house\",\n                  \"car_payment\",\n                  \"brokerage_acct\",\n                  \"fnce_course_b4\",\n                  \"fnce_course_geneseo\",\n                  \"q1_inflation\",\n                  \"q2_mortgage_int\",\n                  \"q3_401k\",\n                  \"q4_risk_return\",\n                  \"q5_comp_int\",\n                  \"q6_apr\",\n                  \"q7_trap\",\n                  \"gold\")\n\n\nmajor_cat &lt;- read_csv('major_category.csv')\nminor_cat &lt;- read_csv('minor_category.csv')\n\nmajor_1_cat &lt;- major_cat |&gt; \n  select(ends_with('1')) |&gt; \n  distinct() |&gt; \n  rename(dept_major_1 = dept_1)\nmajor_2_cat &lt;- major_cat |&gt; \n  select(ends_with('2')) |&gt; \n  distinct() |&gt; \n  rename(dept_major_2 = dept_2)\n\nminor_1_cat &lt;- minor_cat |&gt; \n  select(ends_with('1')) |&gt; \n  distinct() |&gt; \n  rename(dept_minor_1 = dept_1)\nminor_2_cat &lt;- minor_cat |&gt; \n  select(ends_with('2')) |&gt; \n  distinct() |&gt; \n  rename(dept_minor_2 = dept_2)\n\n\ndf_clean &lt;- df |&gt; \n  filter(is.na(q7_trap) | q7_trap == \"To prepare for unexpected expenses\") |&gt; \n  mutate(score = as.integer(str_sub(score, 1, 1))) |&gt; \n  mutate(year_geneseo = case_when(str_detect(year_geneseo, \"First\") ~ \"First\",\n                                  str_detect(year_geneseo, \"Second\") ~ \"Second\",\n                                  str_detect(year_geneseo, \"Third\") ~ \"Third\",\n                                  str_detect(year_geneseo, \"Fourth\") ~ \"Fourth\",\n                                  str_detect(year_geneseo, \"Grad\") ~ \"Grad\",\n                                  str_detect(year_geneseo, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  mutate(age_first_job_raw = age_first_job, .after = age_first_job) |&gt; \n  mutate(age_first_job = case_when(str_detect(age_first_job, \"15\") ~ \"15\",\n                                  str_detect(age_first_job, \"16\") ~ \"16\",\n                                  str_detect(age_first_job, \"17\") ~ \"17\",\n                                  str_detect(age_first_job, \"18\") ~ \"18\",\n                                  str_detect(age_first_job, \"19\") ~ \"19\",\n                                  str_detect(age_first_job, \"20\") ~ \"20\",\n                                  str_detect(age_first_job, \"Prefer\") ~ NA,\n                                  )\n         ) |&gt; \n  mutate(file_tax = case_when(str_detect(file_tax, \"Done\") ~ \"Yes\",\n                                  str_detect(file_tax, \"I did not\") ~ \"No\",\n                                  str_detect(file_tax, \"My parents\") ~ \"Parents\",\n                                  str_detect(file_tax, \"My accountant\") ~ \"Parents\",\n                                  str_detect(file_tax, \"My family\") ~ \"Parents\",\n                                  str_detect(file_tax, \"Yes\") ~ \"Yes\",\n                                  str_detect(file_tax, \"No\") ~ \"No\",\n                                  str_detect(file_tax, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  select(-(time_stamp:email)) |&gt; \n  select(-q7_trap) |&gt; \n  mutate(id_respondent = row_number(), .before = 1) |&gt;\n  mutate(year_geneseo = ifelse(!is.na(graduate_degree), \n                               \"Grad\", year_geneseo) ) |&gt; \n  mutate(year_upper_lower = ifelse(year_geneseo == 'First' | \n                                     year_geneseo == 'Second',\n                                   'Underclassmen', \n                                   ifelse(year_geneseo == \"Grad\",\n                                          'Graduates', 'Upperclassmen')),\n         .after = year_geneseo\n         ) |&gt; \n  # Alexis\n  mutate(credit_card = case_when(str_detect(credit_card, \"I use my parent's credit card\") ~ \"Parents\",\n                                  str_detect(credit_card, \"Yes\") ~ \"Yes\",\n                                  str_detect(credit_card, \"No\") ~ \"No\",\n                                  str_detect(credit_card, \"Prefer\") ~ NA,\n                                  )) |&gt;\n  mutate(age_credit_card = case_when(str_detect(age_credit_card, \"Before age 18\") ~ \"b_18\",\n                                  str_detect(age_credit_card, \"At or after age 18\") ~ \"a_18\",\n                                  str_detect(age_credit_card, \" \nI never owned a credit card\") ~ \"Never\",\n                                  str_detect(age_credit_card, \"Prefer\") ~ NA\n                                  )) |&gt; \n  mutate(pay_rent = case_when(str_detect(pay_rent, \"Live on campus\") ~ \"On_Campus\",\n                                  str_detect(pay_rent, \"Yes\") ~ \"Yes\",\n                                  str_detect(pay_rent, \"No\") ~ \"No\",\n                                  str_detect(pay_rent, \"Prefer\") ~ NA,\n                                  ))|&gt;\n  mutate(own_house = case_when(str_detect(own_house, \"Yes\") ~ \"Yes\",\n                                  str_detect(own_house, \"No\") ~ \"No\",\n                                  str_detect(own_house, \"Prefer\") ~ NA,\n                                  ))|&gt;\n  mutate(car_payment = case_when(str_detect(car_payment, \"Yes\") ~ \"Yes\",\n                                  str_detect(car_payment, \"No\") ~ \"No\",\n                                  str_detect(car_payment, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  mutate(score_pf = ifelse(score &gt;= 4, 1, 0), .after = score) |&gt; \n  relocate(self_eval, .after = score_pf) |&gt; \n  mutate(score_scaled = scale(score), .after = score_pf) |&gt; \n  mutate(self_eval_scaled = scale(self_eval), .after = self_eval) |&gt; \n  mutate(over_confidence = self_eval_scaled - score_scaled, .after = score_pf) |&gt; \n  mutate(MSA = case_when(  # https://dol.ny.gov/new-york-state-geography\n    str_detect(county, paste(c(\"Albany\", \"Rensselaer\", \"Saratoga\", \"Schenectady\", \"Schoharie\"), collapse = '|') ) ~ \"Albany-Schenectady-Troy\",\n    str_detect(county, paste(c(\"Broome\", \"Tioga\"), collapse = '|') ) ~ \"Binghamton\",\n    str_detect(county, paste(c(\"Erie\", \"Niagara\"), collapse = '|') ) ~ \"Buffalo-Niagara Falls\",\n    str_detect(county, paste(c(\"Chemung\"), collapse = '|') ) ~ \"Elmira\",\n    str_detect(county, paste(c(\"Warren\", \"Washington\"), collapse = '|') ) ~ \"Glens Falls\",\n    str_detect(county, paste(c(\"Tompkins\"), collapse = '|') ) ~ \"Ithaca\",\n    str_detect(county, paste(c(\"Kingston\"), collapse = '|') ) ~ \"Ulster\",\n    str_detect(county, paste(c(\"Bronx\", \"Kings\", \"New York\", \"Queens\", \"Richmond\"), collapse = '|') ) ~ \"New York City Metropolitan Area\",\n    str_detect(county, paste(c(\"Orange\", \"Rockland\", \"Westchester\"), collapse = '|') ) ~ \"Orange-Rockland-Westchester\",\n    str_detect(county, paste(c(\"Livingston\", \"Monroe\", \"Ontario\", \"Orleans\", \"Wayne\", \"Yates\"), collapse = '|') ) ~ \"Rochester\",\n    str_detect(county, paste(c(\"Madison\", \"Onondaga\", \"Oswego\"), collapse = '|') ) ~ \"Syracuse\",\n    str_detect(county, paste(c(\"Herkimer\", \"Oneida\"), collapse = '|') ) ~ \"Utica-Rome\",\n    str_detect(county, paste(c(\"Jefferson\"), collapse = '|') ) ~ \"Watertown-Fort Drum\",\n    str_detect(county, paste(c(\"Dutchess\", \"Putnam\"), collapse = '|') ) ~ \"Dutchess-Putnam\",\n    str_detect(county, paste(c(\"Nassau\", \"Suffolk\"), collapse = '|') ) ~ \"Nassau-Suffolk\",\n    str_detect(county, paste(c(\"high school\"), collapse = '|') ) ~ \"Outside NY\",\n    str_detect(county, paste(c(\"Allegany\", \"Cattaraugus\", \"Cayuga\", \"Chautauqua\",\n                               \"Chenango\", \"Clinton\", \"Columbia\", \"Cortland\",\n                               \"Delaware\", \"Essex\", \"Franklin\", \"Fulton\",\n                               \"Genesee\", \"Greene\", \"Hamilton\", \"Lewis\",\n                               \"Montgomery\", \"Otsego\", \"Saint Lawrence\", \"Schuyler\",\n                               \"Seneca\", \"Steuben\", \"Sullivan\", \"Wyoming\"), collapse = '|') ) ~ \"Non-MSA\",\n    ), .after = county\n    ) |&gt; \n  mutate(college_fund = case_when(\n    college_fund == \"No\" ~ \"No\",\n    college_fund == \"Parents Pay for college tuition\" ~ \"Yes\",\n    college_fund == \"Prefer to not respond\" ~ \"Prefer to not respond\",\n    college_fund == \"They set up a savings account with my own money\" ~ \"Yes\",\n    college_fund == \"Yes\" ~ \"Yes\",\n    college_fund == \"Yes, but got used for a car instead\" ~ \"Yes\",\n    college_fund == \"military/educational benefits\" ~ \"Yes\",\n    college_fund == \"not sure\" ~ \"Prefer to not respond\"\n  )) |&gt; \n  mutate(prof_program_TF = ifelse(is.na(prof_program),\n                                  0, 1), .after = prof_program) |&gt; \n  mutate(parent_job_TF = case_when(\n    parent_job == \"Accounting\" ~ 1,\n    parent_job == \"Insurance\" ~ 1,\n    parent_job == \"No\" ~ 0,\n    parent_job == \"One parent used to work for a bank for 17+ years\" ~ 1,\n    parent_job == \"Prefer to not respond\" ~ NA,\n    parent_job == \"Yes\" ~ 0,\n    parent_job == \"healthcare and Law\" ~ 0,\n    parent_job == \"mom is partly involved in real estate\" ~ 1,\n    parent_job == \"mom used to\" ~ 1,\n    parent_job == \"my dad is a mortgage broker\" ~ 1,\n  ), .after = parent_job) |&gt; \n  mutate(age_18_card = ifelse(age_credit_card == 'a_18',\n                              1, \n                              ifelse(age_credit_card == 'b_18',\n                                     0, NA)),\n         .after = age_credit_card) |&gt; \n  mutate(own_house = ifelse(own_house == \"No\", 0, 1)) |&gt; \n  mutate(car_payment = ifelse(car_payment == 'No',\n                              0, \n                              ifelse(car_payment == 'Yes',\n                                     1, NA)),\n         fnce_course_b4 = ifelse(fnce_course_b4 == 'No',\n                              0, \n                              ifelse(fnce_course_b4 == 'Yes',\n                                     1, NA)),\n         fnce_course_geneseo = ifelse(fnce_course_geneseo == 'No',\n                               \"0\", \n                               ifelse(fnce_course_geneseo == 'Yes, only one course',\n                                     \"1\", \n                                     ifelse(fnce_course_geneseo == 'Yes, more than one course', \"More_than_1\", NA))),\n         ) |&gt; \n  mutate(brokerage_acct = ifelse(brokerage_acct == \"I am using a financial advisor to invest my savings, unsure of the status of that\", \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"I never set any of this up\"), \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"Teacher's Retirement\"), \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"No, however am currently in process of doing so\"), \"No\", brokerage_acct),\n         q_IRA = ifelse(str_detect(brokerage_acct, \"IRA\"), 1, 0),\n         q_stock = ifelse(str_detect(brokerage_acct, \"stock\"), 1, 0),\n         q_CDs = ifelse(str_detect(brokerage_acct, \"CDs\"), 1, 0),\n         q_brockerage = ifelse(str_detect(brokerage_acct, \"brockerage\"), 1, 0),\n         q_bonds = ifelse(str_detect(brokerage_acct, \"bonds\"), 1, 0),\n         q_options = ifelse(str_detect(brokerage_acct, \"options\"), 1, 0),\n         q_crypto = ifelse(str_detect(brokerage_acct, \"crypto\"), 1, 0),\n         q_yes = ifelse(brokerage_acct == \"No\", 0, \n                        ifelse(brokerage_acct == \"Prefer to not respond\", NA, 1)),\n         .before = brokerage_acct\n         ) |&gt; \n  separate(major, into = c('major_1', 'major_2'),\n           sep = ', ') |&gt; \n  separate(minor, into = c('minor_1', 'minor_2'),\n           sep = ', ') |&gt; \n  relocate(grad_yr, .before = year_geneseo) |&gt; \n  relocate(major_1, major_2, .after = year_upper_lower) |&gt; \n  relocate(minor_1, minor_2, .after = major_2) \n\ndf_clean &lt;- df_clean |&gt; \n  left_join(major_1_cat) |&gt;\n  left_join(major_2_cat) |&gt; \n  left_join(minor_1_cat) |&gt; \n  left_join(minor_2_cat |&gt; filter(!is.na(minor_2))) |&gt; \n  mutate(minor_2 = ifelse(minor_1 == \"anthropology and biology\",\n                          \"Biology\", minor_2),\n         minor_2 = ifelse(minor_1 == \"sustainability studies and biology\",\n                          \"Biology\", minor_2)\n         ) |&gt;\n  relocate(dept_major_1, .after = major_1) |&gt;\n  relocate(dept_major_2, .after = major_2) |&gt;\n  relocate(dept_minor_1, .after = minor_1) |&gt;\n  relocate(dept_minor_2, .after = minor_2) |&gt; \n  mutate(transfer = ifelse(transfer == \"Yes\", 1, 0)) |&gt; \n  select(-age_first_job_raw, -parent_job, -age_credit_card,\n         -brokerage_acct) |&gt; \n  mutate(q1_inflation = ifelse(q1_inflation == \"The same amount as today\", 1, 0),\n         q2_mortgage_int = ifelse(q2_mortgage_int == \"TRUE\", 1, 0),\n         q3_401k = ifelse(str_detect(q3_401k, \"Either before\"), 1, 0),\n         q4_risk_return = ifelse(q4_risk_return == \"TRUE\", 1, 0),\n         q5_comp_int = ifelse(q5_comp_int == \"More than $102\", 1, 0),\n         q6_apr = ifelse(str_detect(q6_apr, \"It is calculated by multiplying\"), 1, 0),\n         age_first_job = as.integer(age_first_job),\n         college_fund = ifelse(college_fund == \"Yes\", 1,\n                               ifelse(college_fund == \"No\", 0 , NA)),\n         age_18_card = ifelse(is.na(age_18_card), 0 , age_18_card)\n         ) |&gt; \n  mutate(major = \"\", .after = year_upper_lower) |&gt; \n  mutate(\n         major = ifelse(dept_major_1 == \"Education\" | dept_major_2 == \"Education\",\n                        \"Education\", major),\n\n         major = ifelse(dept_major_1 == \"School of Business\" | dept_major_2 == \"School of Business\", \"School of Business\", major)\n  ) |&gt; \n  filter(grad_yr != \"Received a GED\") |&gt; \n  mutate(major = ifelse( dept_major_1 %in% c(\"Biology\", \n                                             \"Mathematics\",\n                                             \"Geology\", \n                                             \"Chemistry\", \n                                             \"Neuroscience\", \n                                             \"Geography\",\n                                             \"Physics\",\n                                             \"Geography and Sustainability Studies\"), \n                         \"STEM\", major),\n         major = ifelse( dept_major_2 %in% c(\"Biology\", \n                                             \"Mathematics\",\n                                             \"Geology\", \n                                             \"Chemistry\", \n                                             \"Neuroscience\", \n                                             \"Geography\",\n                                             \"Physics\",\n                                             \"Geography and Sustainability Studies\"), \n                         \"STEM\", major))\n\ndf_clean &lt;- df_clean |&gt; \n  mutate(major = ifelse(is.na(major) & dept_major_1 == \"Education\", \"Education\", major),\n         major = ifelse(is.na(major) & dept_major_2 == \"Education\", \"Education\", major),)\n\n\ndf_clean &lt;- df_clean |&gt; \n  mutate(major = ifelse(is.na(major), \"Non-STEM\", major),\n         major = ifelse(major == \"\", \"Non-STEM\", major)\n         )\n\nmajor_1_count &lt;- df_clean |&gt; \n  count(dept_major_1) |&gt; \n  arrange(-n)\n\nmajor_2_count &lt;- df_clean |&gt; \n  count(dept_major_2) |&gt; \n  arrange(-n)\n\n\ndf_clean_sum &lt;- skim(df_clean) |&gt; \n  arrange(-n_missing)\n\n\nskim(df_clean) |&gt; \n  filter(skim_type == 'numeric') |&gt; \n  select(-starts_with('character'), -n_missing,-complete_rate)\n\n\nData summary\n\n\nName\ndf_clean\n\n\nNumber of rows\n396\n\n\nNumber of columns\n51\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n30\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nid_respondent\n199.13\n114.86\n1.00\n99.75\n199.50\n298.25\n397.00\n▇▇▇▇▇\n\n\nscore\n3.32\n1.52\n0.00\n2.00\n3.00\n4.00\n6.00\n▃▅▇▇▇\n\n\nscore_pf\n0.48\n0.50\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nover_confidence\n0.00\n1.16\n-3.31\n-0.70\n-0.04\n0.63\n3.88\n▁▅▇▂▁\n\n\nscore_scaled\n0.00\n1.00\n-2.18\n-0.87\n-0.21\n0.45\n1.76\n▃▅▇▇▇\n\n\nself_eval\n2.59\n1.03\n1.00\n2.00\n3.00\n3.00\n5.00\n▃▇▇▅▁\n\n\nself_eval_scaled\n0.00\n1.00\n-1.55\n-0.57\n0.40\n0.40\n2.35\n▃▇▇▅▁\n\n\ntransfer\n0.12\n0.33\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nprof_program_TF\n0.10\n0.30\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_first_job\n15.88\n1.00\n15.00\n15.00\n16.00\n16.00\n20.00\n▇▁▁▁▁\n\n\ncollege_fund\n0.54\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nparent_job_TF\n0.02\n0.13\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_18_card\n0.50\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nown_house\n0.01\n0.11\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\ncar_payment\n0.19\n0.39\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_IRA\n0.16\n0.37\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_stock\n0.19\n0.39\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_CDs\n0.07\n0.25\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_brockerage\n0.11\n0.31\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_bonds\n0.07\n0.25\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_options\n0.03\n0.17\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_crypto\n0.04\n0.20\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_yes\n0.35\n0.48\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nfnce_course_b4\n0.39\n0.49\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nq1_inflation\n0.67\n0.47\n0.00\n0.00\n1.00\n1.00\n1.00\n▃▁▁▁▇\n\n\nq2_mortgage_int\n0.73\n0.45\n0.00\n0.00\n1.00\n1.00\n1.00\n▃▁▁▁▇\n\n\nq3_401k\n0.34\n0.47\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nq4_risk_return\n0.57\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▆▁▁▁▇\n\n\nq5_comp_int\n0.76\n0.43\n0.00\n1.00\n1.00\n1.00\n1.00\n▂▁▁▁▇\n\n\nq6_apr\n0.25\n0.43\n0.00\n0.00\n0.00\n0.25\n1.00\n▇▁▁▁▂\n\n\n\n\n\n\ndf_clean |&gt; \n  filter(major == 'School of Business') |&gt; \n  skim() |&gt; \n  filter(skim_type == 'numeric') |&gt; \n  select(-starts_with('character'), -n_missing,-complete_rate)\n\n\nData summary\n\n\nName\nfilter(df_clean, major ==…\n\n\nNumber of rows\n122\n\n\nNumber of columns\n51\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n30\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nid_respondent\n248.47\n112.71\n2.00\n158.50\n277.50\n348.75\n396.00\n▃▃▃▆▇\n\n\nscore\n4.22\n1.26\n0.00\n3.00\n4.00\n5.00\n6.00\n▁▁▃▅▇\n\n\nscore_pf\n0.74\n0.44\n0.00\n0.00\n1.00\n1.00\n1.00\n▃▁▁▁▇\n\n\nover_confidence\n-0.13\n1.14\n-3.31\n-0.70\n-0.04\n0.59\n3.88\n▁▅▇▁▁\n\n\nscore_scaled\n0.59\n0.83\n-2.18\n-0.21\n0.45\n1.10\n1.76\n▁▁▃▅▇\n\n\nself_eval\n3.06\n1.02\n1.00\n2.00\n3.00\n4.00\n5.00\n▂▅▇▇▁\n\n\nself_eval_scaled\n0.46\n1.00\n-1.55\n-0.57\n0.40\n1.38\n2.35\n▂▅▇▇▁\n\n\ntransfer\n0.13\n0.34\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nprof_program_TF\n0.01\n0.09\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_first_job\n15.77\n0.95\n15.00\n15.00\n15.00\n16.00\n19.00\n▇▅▂▁▁\n\n\ncollege_fund\n0.58\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▆▁▁▁▇\n\n\nparent_job_TF\n0.02\n0.13\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_18_card\n0.57\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▆▁▁▁▇\n\n\nown_house\n0.03\n0.18\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\ncar_payment\n0.16\n0.37\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_IRA\n0.25\n0.43\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_stock\n0.39\n0.49\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nq_CDs\n0.06\n0.23\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_brockerage\n0.26\n0.44\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▃\n\n\nq_bonds\n0.11\n0.31\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_options\n0.08\n0.28\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_crypto\n0.10\n0.30\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_yes\n0.54\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nfnce_course_b4\n0.44\n0.50\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▆\n\n\nq1_inflation\n0.80\n0.41\n0.00\n1.00\n1.00\n1.00\n1.00\n▂▁▁▁▇\n\n\nq2_mortgage_int\n0.85\n0.36\n0.00\n1.00\n1.00\n1.00\n1.00\n▂▁▁▁▇\n\n\nq3_401k\n0.56\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▆▁▁▁▇\n\n\nq4_risk_return\n0.78\n0.42\n0.00\n1.00\n1.00\n1.00\n1.00\n▂▁▁▁▇\n\n\nq5_comp_int\n0.93\n0.26\n0.00\n1.00\n1.00\n1.00\n1.00\n▁▁▁▁▇\n\n\nq6_apr\n0.31\n0.47\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▃\n\n\n\n\n\n\ndf_clean |&gt; \n  filter(major != 'School of Business') |&gt; \n  skim() |&gt; \n  filter(skim_type == 'numeric') |&gt; \n  select(-starts_with('character'), -n_missing,-complete_rate)\n\n\nData summary\n\n\nName\nfilter(df_clean, major !=…\n\n\nNumber of rows\n274\n\n\nNumber of columns\n51\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n30\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nid_respondent\n177.16\n109.03\n1.00\n84.25\n173.00\n254.75\n397.00\n▇▇▇▆▅\n\n\nscore\n2.92\n1.46\n0.00\n2.00\n3.00\n4.00\n6.00\n▅▆▇▇▅\n\n\nscore_pf\n0.37\n0.48\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nover_confidence\n0.06\n1.17\n-3.31\n-0.70\n-0.04\n0.93\n3.56\n▁▆▇▅▁\n\n\nscore_scaled\n-0.27\n0.96\n-2.18\n-0.87\n-0.21\n0.45\n1.76\n▅▆▇▇▅\n\n\nself_eval\n2.38\n0.96\n1.00\n2.00\n2.00\n3.00\n5.00\n▅▇▇▂▁\n\n\nself_eval_scaled\n-0.20\n0.93\n-1.55\n-0.57\n-0.57\n0.40\n2.35\n▅▇▇▂▁\n\n\ntransfer\n0.12\n0.33\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nprof_program_TF\n0.14\n0.35\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_first_job\n15.93\n1.02\n15.00\n15.00\n16.00\n16.00\n20.00\n▇▁▁▁▁\n\n\ncollege_fund\n0.52\n0.50\n0.00\n0.00\n1.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nparent_job_TF\n0.02\n0.13\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nage_18_card\n0.47\n0.50\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nown_house\n0.00\n0.06\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\ncar_payment\n0.20\n0.40\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq_IRA\n0.12\n0.33\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_stock\n0.09\n0.29\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_CDs\n0.07\n0.26\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_brockerage\n0.04\n0.19\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_bonds\n0.05\n0.21\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_options\n0.01\n0.09\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_crypto\n0.02\n0.13\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\n\n\nq_yes\n0.26\n0.44\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▃\n\n\nfnce_course_b4\n0.37\n0.48\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▅\n\n\nq1_inflation\n0.61\n0.49\n0.00\n0.00\n1.00\n1.00\n1.00\n▅▁▁▁▇\n\n\nq2_mortgage_int\n0.67\n0.47\n0.00\n0.00\n1.00\n1.00\n1.00\n▃▁▁▁▇\n\n\nq3_401k\n0.24\n0.43\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\nq4_risk_return\n0.48\n0.50\n0.00\n0.00\n0.00\n1.00\n1.00\n▇▁▁▁▇\n\n\nq5_comp_int\n0.69\n0.46\n0.00\n0.00\n1.00\n1.00\n1.00\n▃▁▁▁▇\n\n\nq6_apr\n0.22\n0.42\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▂\n\n\n\n\n\n\ndf_clean |&gt; \n  mutate(grad_yr = factor(grad_yr, \n                           levels = c(\"Prior to 2018\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"))) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt; \n  filter(!is.na(grad_yr))|&gt; \n  ggplot(aes(fill = score_pf, y= grad_yr)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")+\n   scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  guides(fill = guide_legend(reverse = T)) +\n  labs(title = \"Graduation Year Pass Rate\", \n       x = \"Percentage Pass\", \n       y = \"High School\\n Graduation Year\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\nDT::datatable(table)\n\n\n\n\n\nDT::datatable(df_clean |&gt; \n                mutate(over_confidence = round(over_confidence, 2),\n                       score_scaled = round(over_confidence, 2),\n                       self_eval_scaled = round(self_eval_scaled, 2)))\n\n\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt;\n  ggplot(aes(fill =score_pf, x= year_upper_lower)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\")+\n  scale_y_continuous(labels = scales::percent)+\n  guides(fill= guide_legend(reverse  = TRUE))+\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  labs(title = \"Overall Pass Rate\", \n       x = \"Percent Pass\", \n       y = \"\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  mutate(SoB = ifelse(dept_major_1 == \"School of Business\", \"SoB Student\", \"Not SoB Student\")) |&gt; \n  filter(!is.na(SoB)) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt;\n  ggplot(aes(fill =score_pf, y= year_upper_lower)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  facet_wrap(SoB~.) +\n  scale_x_continuous(labels = scales::percent)+\n  guides(fill= guide_legend(reverse  = TRUE))+\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  labs(title = \"SoB Pass Rate\", \n       x = \"Percent Pass\", \n       y = \"\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower),\n         !is.na(credit_card)) |&gt; \n  ggplot(aes(fill =score_pf, y= year_upper_lower)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  facet_wrap(credit_card~.) +\n  theme(legend.position = \"top\")\n\n\n\n\n\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -prof_program, -graduate_degree,\n  ) \n\n\nlibrary(maps)\n\n# maps::map('county', region = 'new york', col = \"#5E610B\")\n# map.axes(cex.axis=0.8) \n# title(main = \"New York State by Counties\")\n\nny_county_score &lt;- df_clean |&gt; \n  group_by(county) |&gt; \n  summarize(score = mean(score),\n            n = n()) |&gt; \n  mutate(subregion = str_replace_all(county, \" County\", \"\")\n  ) |&gt; \n  mutate(subregion = ifelse(subregion == \"Kings (Brooklyn)\", \"Kings\", subregion),\n         subregion = ifelse(subregion == \"New York (Manhattan)\", \"New York\", subregion),\n         subregion = ifelse(subregion == \"Richmond (Staten Island)\", \"Richmond\", subregion),\n         subregion = ifelse(subregion == \"Saint Lawrence\", \"St Lawrence\", subregion),\n  ) |&gt; \n  mutate(subregion = str_to_lower(subregion)) |&gt; \n  filter(subregion != \"i did not graduate from a high school in ny\")\n\nstates &lt;- map_data(\"state\")\ncounties &lt;- map_data(\"county\")\nNewYork &lt;- subset(states, region == \"new york\")\n# head(NewYork)\n\nny_county &lt;- subset(counties, region == \"new york\")\n# head(ny_county)\n\n\nny_county_data &lt;- ny_county |&gt; \n  left_join(ny_county_score)\n\nggplot(ny_county_data) + \n  geom_polygon(aes(x=long, y = lat, group = group, fill = n),\n               linewidth = .1, color = 'grey90') +\n  labs(title = \"New York State by Counties\", x = \"longitude\", y = \"latitude\") +\n  coord_fixed(1.3) +\n  scale_fill_gradient(low = \"#9bbbae\",\n                      high = \"darkgreen\",\n                      na.value = \"white\") +\n  theme_map() +\n  theme(panel.background = element_blank())+\n  labs(title = \"Where Students Graduated High School\", \n       fill = \"Number of Students\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(grad_yr = factor(grad_yr, \n                           levels = c(\"Prior to 2018\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"))) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt; \n  filter(!is.na(grad_yr))|&gt; \n  ggplot(aes(fill = score_pf, y= grad_yr)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  guides(fill = guide_legend(reverse = T)) +\n  labs(title = \"Graduation Year Pass Rate\", \n       x = \"Percentage Pass\", \n       y = \"High School\\n Graduation Year\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(age_first_job))|&gt; \n  ggplot(aes(fill =score_pf, y= age_first_job)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(file_tax))|&gt; \n  ggplot(aes(fill =score_pf, y= file_tax)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(credit_card))|&gt; \n  ggplot(aes(fill =score_pf, y= credit_card)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  ggplot(aes(fill =score, x= year_upper_lower)) +\n   scale_fill_manual(values = c(\"#c9dad3\", \"#84ab9b\", \"#6c9b88\", \"#63917e\", \"#537a6a\", \"#436256\", \"#3b574c\"))+\n  geom_bar(position = \"fill\")\n\n\n\n\n\ndf_clean |&gt; \n  count(year_geneseo) |&gt; \n  mutate(prop = n / sum(n)) |&gt; \n  filter(!is.na(year_geneseo)) |&gt; \n  ggplot(aes(x = year_geneseo, y = prop,\n             fill = year_geneseo)) +\n  geom_col() +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_manual(values = c(\"#c9dad3\", \"#84ab9b\", \"#6c9b88\", \"#63917e\", \"#537a6a\", \"#436256\", \"#3b574c\"))+\n  guides(fill = \"none\") +\n  labs(x = \"Year at Geneseo\",\n       y = \"Proportion\",\n       title = \"Percent of Respondents and Their Year at Geneseo\")\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  ggplot(aes(x =score, fill= score)) +\n  scale_fill_manual(values = c(\"#c9dad3\", \"#84ab9b\", \"#6c9b88\", \"#63917e\", \"#537a6a\", \"#436256\", \"#3b574c\"))+\n  geom_bar(show.legend = F)\n\n\n\n\n\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  filter(!is.na(year_geneseo)) |&gt; \n  ggplot(aes(fill =score, x= year_geneseo)) +\n  scale_fill_manual(values = c(\"#c9dad3\", \"#84ab9b\", \"#6c9b88\", \"#63917e\", \"#537a6a\", \"#436256\", \"#3b574c\"))+\n  geom_bar(position = \"fill\")\n\n\n\n\n\ndf_clean |&gt;\n  filter(!is.na(major_1)) |&gt;\n  ggplot(aes(y= reorder(major_1, score), fill = reorder(major_1, score), x= score)) +\n  geom_boxplot(show.legend = F) +\n  labs(y = \"\",\n       x = \"Score\",\n       title = \"Financial Literacy Scores By Major\") +\n  scale_fill_manual(values = c(\"#9BBBAE\" ,\n  \"#97B8AB\" ,\n  \"#93B5A7\" ,\n  \"#8FB2A4\" ,\n  \"#8AB0A1\" ,\n  \"#86AD9D\" ,\n  \"#82AA9A\" ,\n  \"#7EA796\" ,\n  \"#7AA493\" ,\n  \"#76A290\" ,\n  \"#729F8C\" ,\n  \"#6D9C89\" ,\n  \"#699986\" ,\n  \"#659682\" ,\n  \"#61937F\" ,\n  \"#5D907C\" ,\n  \"#598E78\" ,\n  \"#558B75\" ,\n  \"#508872\" ,\n  \"#4C856E\" ,\n  \"#48826B\" ,\n  \"#448067\" ,\n  \"#407D64\" ,\n  \"#3C7A61\" ,\n  \"#38775D\" ,\n  \"#34745A\" ,\n  \"#2F7157\" ,\n  \"#2B6E53\" ,\n  \"#276C50\" ,\n  \"#23694D\" ,\n  \"#1F6649\" ,\n  \"#1B6346\" ,\n  \"#176042\" ,\n  \"#125E3F\" ,\n  \"#0E5B3C\" ,\n  \"#0A5838\" ,\n  \"#065535\" )\n) +\n  theme(plot.title = element_text(hjust = .5,\n                                  size = rel(2)))\n\n\n\n\n\ndf_clean |&gt;\n  filter(!is.na(fnce_course_geneseo)) |&gt;\n  mutate(fnce_course_geneseo = factor(fnce_course_geneseo,\n                                      levels = c('More_than_1','1','0'))) |&gt;\n  ggplot(aes(y=score, fill=fnce_course_geneseo))+\n  geom_bar(position = \"fill\")+\n  theme(legend.position = \"top\")+\nlabs(title = \"Finance Course Taken at Geneseo Compared to Score \",\n       x = \"Proportion\",\n       y = \"Score\",\n       fill = \"Finance Course Taken\") +\n  guides(fill = guide_legend(keywidth = 3,\n                             label.position = \"bottom\",\n                             reverse = T)) +\n  scale_fill_manual(values = rev(c('#9bbbae', '#699985','#065535')))"
  },
  {
    "objectID": "project-capstone.html#estimation",
    "href": "project-capstone.html#estimation",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "3.1 Estimation",
    "text": "3.1 Estimation\n\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML2 &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score_pf, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_ML &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()\n\n\nreg &lt;- lm(data = df_clean_ML2,\n          score ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML2$score ,df_dummies)\ndf_ML2 &lt;- df_dummies |&gt; \n  rename(score = `df_clean_ML2$score`)\n\n\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \" \", \"_\")\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \"-\", \"_\")\n\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \" \", \"_\")\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \"-\", \"_\")\n\nmodel &lt;- glm(score_pf ~ ., \n             data = df_ML, \n             family = binomial(link = \"logit\") )\n\n\nmodel_lm &lt;- lm(score ~ ., \n               data = df_ML2)\n\n# summary(model_lm)\n\n\nlibrary(margins)\nm &lt;- margins(model)\name_result &lt;- summary(m)\n# ame_result\n\n\n3.1.1 Regression Table\nstargazer(model, model_lm, type = 'html',\n          omit = c(\"MSA\", \"grad_\", \"pay_\",\n                   \"college_fund\"))\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nscore_pf\n\n\nscore\n\n\n\n\n\n\nlogistic\n\n\nOLS\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n\n\n\n\n\n\nover_confidence\n\n\n-2.023***\n\n\n-0.785***\n\n\n\n\n\n\n(0.265)\n\n\n(0.049)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUnderclassmen\n\n\n0.345\n\n\n0.077\n\n\n\n\n\n\n(0.862)\n\n\n(0.288)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUpperclassmen\n\n\n0.932\n\n\n0.091\n\n\n\n\n\n\n(0.852)\n\n\n(0.272)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorNon_STEM\n\n\n-0.031\n\n\n0.156\n\n\n\n\n\n\n(0.535)\n\n\n(0.175)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSchool_of_Business\n\n\n1.380**\n\n\n0.815***\n\n\n\n\n\n\n(0.618)\n\n\n(0.212)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSTEM\n\n\n0.246\n\n\n0.397**\n\n\n\n\n\n\n(0.547)\n\n\n(0.183)\n\n\n\n\n\n\n\n\n\n\n\n\ntransfer\n\n\n-1.455**\n\n\n-0.369*\n\n\n\n\n\n\n(0.654)\n\n\n(0.202)\n\n\n\n\n\n\n\n\n\n\n\n\nprof_program_TF\n\n\n1.103*\n\n\n0.059\n\n\n\n\n\n\n(0.608)\n\n\n(0.198)\n\n\n\n\n\n\n\n\n\n\n\n\nage_first_job\n\n\n0.418**\n\n\n0.140**\n\n\n\n\n\n\n(0.193)\n\n\n(0.058)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxParents\n\n\n0.179\n\n\n0.215\n\n\n\n\n\n\n(0.413)\n\n\n(0.137)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxYes\n\n\n1.807***\n\n\n0.803***\n\n\n\n\n\n\n(0.613)\n\n\n(0.180)\n\n\n\n\n\n\n\n\n\n\n\n\nparent_job_TF\n\n\n-1.404\n\n\n0.135\n\n\n\n\n\n\n(1.469)\n\n\n(0.474)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardParents\n\n\n1.556\n\n\n0.152\n\n\n\n\n\n\n(0.991)\n\n\n(0.306)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardYes\n\n\n2.179***\n\n\n0.494**\n\n\n\n\n\n\n(0.744)\n\n\n(0.215)\n\n\n\n\n\n\n\n\n\n\n\n\nage_18_card\n\n\n-1.327*\n\n\n-0.246\n\n\n\n\n\n\n(0.740)\n\n\n(0.208)\n\n\n\n\n\n\n\n\n\n\n\n\nown_house\n\n\n-4.836***\n\n\n-1.408**\n\n\n\n\n\n\n(1.706)\n\n\n(0.550)\n\n\n\n\n\n\n\n\n\n\n\n\ncar_payment\n\n\n0.589\n\n\n0.328**\n\n\n\n\n\n\n(0.449)\n\n\n(0.146)\n\n\n\n\n\n\n\n\n\n\n\n\nq_IRA\n\n\n0.596\n\n\n0.081\n\n\n\n\n\n\n(0.635)\n\n\n(0.195)\n\n\n\n\n\n\n\n\n\n\n\n\nq_stock\n\n\n0.668\n\n\n0.103\n\n\n\n\n\n\n(0.692)\n\n\n(0.217)\n\n\n\n\n\n\n\n\n\n\n\n\nq_CDs\n\n\n1.206\n\n\n0.141\n\n\n\n\n\n\n(0.822)\n\n\n(0.250)\n\n\n\n\n\n\n\n\n\n\n\n\nq_brockerage\n\n\n0.804\n\n\n0.252\n\n\n\n\n\n\n(0.783)\n\n\n(0.235)\n\n\n\n\n\n\n\n\n\n\n\n\nq_bonds\n\n\n0.290\n\n\n0.022\n\n\n\n\n\n\n(0.764)\n\n\n(0.251)\n\n\n\n\n\n\n\n\n\n\n\n\nq_options\n\n\n1.962\n\n\n0.427\n\n\n\n\n\n\n(1.546)\n\n\n(0.387)\n\n\n\n\n\n\n\n\n\n\n\n\nq_crypto\n\n\n-1.763\n\n\n-0.604*\n\n\n\n\n\n\n(1.185)\n\n\n(0.314)\n\n\n\n\n\n\n\n\n\n\n\n\nq_yes\n\n\n0.013\n\n\n0.431**\n\n\n\n\n\n\n(0.668)\n\n\n(0.213)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_b4\n\n\n0.553\n\n\n0.183\n\n\n\n\n\n\n(0.396)\n\n\n(0.122)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseo1\n\n\n0.764\n\n\n0.114\n\n\n\n\n\n\n(0.702)\n\n\n(0.220)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseoMore_than_1\n\n\n1.867**\n\n\n0.639***\n\n\n\n\n\n\n(0.782)\n\n\n(0.221)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldNo\n\n\n-1.080\n\n\n-0.453*\n\n\n\n\n\n\n(0.769)\n\n\n(0.239)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldYes\n\n\n-0.190\n\n\n0.068\n\n\n\n\n\n\n(0.399)\n\n\n(0.128)\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n-7.610**\n\n\n0.721\n\n\n\n\n\n\n(3.583)\n\n\n(1.104)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n355\n\n\n355\n\n\n\n\nR2\n\n\n\n\n0.638\n\n\n\n\nAdjusted R2\n\n\n\n\n0.574\n\n\n\n\nLog Likelihood\n\n\n-129.024\n\n\n\n\n\n\nAkaike Inf. Crit.\n\n\n366.048\n\n\n\n\n\n\nResidual Std. Error\n\n\n\n\n0.981 (df = 301)\n\n\n\n\nF Statistic\n\n\n\n\n10.010*** (df = 53; 301)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\n\n\n3.1.2 Logit AME\n\nggplot(data = ame_result |&gt; \n         filter( p &lt;= .1)) +\n  geom_point( aes(y = reorder(factor, AME), x = AME) ) +\n  geom_errorbar(aes(y = reorder(factor, AME), \n                    xmin = lower, xmax = upper),\n                width = .5) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       title = \"Logistic Regression Estimation\",\n       subtitle = \"Average Marginal Effect on Financial Literacy Scores\") +\n  scale_x_continuous(breaks = seq(-1,.4,.2),\n                     labels = scales::percent) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n3.1.3 Linear Regression AME\n\nbroom::tidy(model_lm, conf.int = T) |&gt; \n  filter(p.value &lt;= .1) |&gt; \n  filter(!str_detect(term, \"MSA\")) |&gt; \n  ggplot() +\n  geom_point( aes(y = reorder(term, estimate), x = estimate)) +\n  geom_errorbar(aes(y = reorder(term, estimate), \n                    xmin = conf.low, xmax = conf.high),\n                width = .5,) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       x = \"Beta Estimate\",\n       title = \"Linear Regression Estimation\",\n       subtitle = \"Effect on Financial Literacy Scores\")  +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5),\n        )\n\n\n\n\n\ndf_ML |&gt; \n  mutate(q_yes = ifelse(q_yes==0, 'Invests', \"Doesn't Invest\")) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) + \n  labs(fill = \"Pass/ Fail\") +\n  facet_grid(q_yes ~ .)\n\n\n\n\n\ndf_ML |&gt; \n  mutate(prof_program_TF = ifelse(prof_program_TF==0, \n                        'Not in a Professional Program', \n                        'In a Professional Program')) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) +\n    labs(fill = \"Pass/ Fail\") +\n  facet_wrap(prof_program_TF ~.)\n\n\n\n\n\ndf_clean |&gt; \n  ggplot(aes(x = over_confidence, y = major)) +\n  geom_boxplot() \n\n\n\n\n\n\n3.1.4 Classficiation Tree\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\nrf &lt;- rpart(score_pf ~ .,\n            data = df_ML, method  = \"class\")\n# rf\n# printcp(rf)\nrpart.plot(rf)\n\n\n\n\n\n\n3.1.5 Regression Tree\n\nrf_reg &lt;- rpart(score ~ .,\n            data = df_ML2, method  = \"anova\")\n# rf_reg\n# printcp(rf_reg)\nrpart.plot(rf_reg)\n\n\n\n\n\n\n3.1.6 Random Forest - Variable Importance\n\nlibrary(ranger)\nlibrary(vip)\nfao_ranger1 &lt;- ranger(score ~ ., \n                        data = df_ML2, \n                        mtry = 13, num.trees = 50,\n                        importance = \"impurity\")\n\nvip1 &lt;- vip(fao_ranger1)\n\ndf1 &lt;- data.frame(\n    var = vip1[[\"data\"]][[\"Variable\"]],\n    imp = vip1[[\"data\"]][[\"Importance\"]]\n  ) %&gt;% \n    arrange(var)\n\n\ndf1 |&gt; \n  ggplot(aes(x = imp, y = reorder(var, imp),\n             fill = reorder(var, imp))) +\n  geom_col(show.legend = F) +\n  scale_x_log10() +\n  labs(x = \"Variable Importance\",\n       y = \"\",\n       title = \"Random Forest Estimation\",\n       subtitle = \"Varialbe Importance\") +\n  scale_fill_manual(values = c(\"#E5F5E0\" ,\n  \"#CCE1CA\" ,\n  \"#B2CEB4\" ,\n  \"#99BA9E\" ,\n  \"#7FA688\" ,\n  \"#669373\" ,\n  \"#4C7F5D\",\n  \"#336B47\",\n  \"#195831\" ,\n  \"#00441B\")) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  mutate(dept_major_2 = ifelse(!is.na(dept_major_2), 1, 0),\n         dept_minor_1 = ifelse(!is.na(dept_minor_1), 1, 0),\n         dept_minor_2 = ifelse(!is.na(dept_minor_2), 1, 0)\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_dummies &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "I solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.\nI will not communicate with other students or use unauthorized materials.\nI will uphold the integrity of this exam and demonstrate my own knowledge and abilities.\nBy taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.\nI accept the consequences of any violation of this promise.\n\nStudent’s Name: Isabella Nicastro\nStudent’s ID:\nStudent’s Signature: Isabella Nicastro"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-banks_all",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-banks_all",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks_all",
    "text": "Description for Variables in banks_all\n\nyear: Year\nmonth: Month\nday: Day\nbib6: The number of banks in business in the Sixth District\nbib8: The number of banks in business in the Eighth District\n\n\n\nbanks &lt;- read_csv('https://bcdanl.github.io/data/banks_ms.csv')"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-banks",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-banks",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks",
    "text": "Description for Variables in banks\n\nyear: Year\nmonth: Month\nday: Day\ndistrict: District\n\nbib6: The Sixth District\nbib8: The Eighth District\ncounterfactual: The Sixth District Counterfactual. The counterfactual evolution of the number of banks in the Sixth District if the same number of banks had failed in that district after 1930 as did in the Eighth.\n\nn_banks: The number of banks in business"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1a",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1a",
    "text": "Q1a\n\nProvide your R code to create a new data.frame, bank7_1, which contains the observations with only July 1st for each year in the data.frame banks_all."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1b",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1b",
    "text": "Q1b\n\nProvide your R code to calculate the median, mean, and standard deviation of the number of banks in business in each district in the data.frame banks_all.\n\n\n\n\n\nData summary\n\n\nName\nbanks_all\n\n\nNumber of rows\n1878\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmonth\n0\n1\n3\n9\n0\n12\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nday\n0\n1\n15.68\n8.79\n1\n8\n16\n23\n31\n▇▇▇▇▆\n\n\nyear\n0\n1\n1931.57\n1.54\n1929\n1930\n1932\n1933\n1934\n▇▅▅▅▃\n\n\nbib6\n0\n1\n118.62\n13.89\n102\n105\n114\n133\n142\n▇▇▃▂▆\n\n\nbib8\n0\n1\n133.04\n22.68\n109\n111\n121\n165\n170\n▇▃▁▁▅"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1c.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1c.",
    "text": "Q1c.\n\nProvide the ggplot code to replicate the following ggplot figure that describes how the distribution of the number of banks in business varies by district.\n\nBlue color corresponds to the Sixth district.\nRed color corresponds to the Eighth district."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1d.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1d.",
    "text": "Q1d.\n\nProvide the ggplot code with the data.frame banks to replicate the following ggplot figure that describes the yearly trend of the number of banks in business for each district.\n\nThe dotted line is from the observation with “counterfactual” district value .\nThe logical condition district != \"counterfactual\" returns TRUE if the value of district is not equal to “counterfactual”.\nThe logical condition district != \"counterfactual\" returns FALSE if the value of district is equal to “counterfactual”.\nThe number of banks in business in this figure was measured on July 1st in each year."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1e.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q1e.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1e.",
    "text": "Q1e.\n\nConsidering the context of the data.frame, banks, and the ggplot figure in Q1d, make a detailed comment on the following questions:\n\nDescribe and compare the yearly trend of the number of banks in business depicted in the ggplot figure in Q1d.\nWhat would be the effect of the monetary policy on bank failures in Mississippi in July 1934?\nIn the given ggplot figure in Q1d, point out the magnitude of such effect."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#variable-description",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#variable-description",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable description",
    "text": "Variable description\n\ncountry: factor with 142 levels\ncontinent: factor with 5 levels\nyear: ranges from 1952 to 2007 in increments of 5 years\nlifeExp: life expectancy at birth, in years\npop: population\n\ngdpPercap GDP per capita (US$, inflation-adjusted)"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2a.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a.",
    "text": "Q2a.\n\nProvide ggplot code to replicate the following visualization that describes (1) the time trend of log10(gdpPercap) for each country and (2) the time trend of log10(gdpPercap) for each continent.\n\nThe time trend of log10(gdpPercap) for each continent, depicted by the blue curve, is from the prediction based on the data points of year and log10(gdpPercap).\nThe time trend of log10(gdpPercap) for each country, depicted by the “grey” curve, is from the data points of year and log10(gdpPercap) for that country."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2b.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b.",
    "text": "Q2b.\n\nInterpret the visualization in Q2a."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#gdp-per-capita-has-changed-over-the-years-for-countries-within-each-continent.-each-panel-represents-one-continent-allowing-for-a-comparison-of-gdp-per-capita-trends-between-continents.-i-was-able-to-identify-differences-in-economic-development-trajectories-between-regions.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#gdp-per-capita-has-changed-over-the-years-for-countries-within-each-continent.-each-panel-represents-one-continent-allowing-for-a-comparison-of-gdp-per-capita-trends-between-continents.-i-was-able-to-identify-differences-in-economic-development-trajectories-between-regions.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "GDP per capita has changed over the years for countries within each continent. Each panel represents one continent, allowing for a comparison of GDP per capita trends between continents. I was able to identify differences in economic development trajectories between regions.",
    "text": "GDP per capita has changed over the years for countries within each continent. Each panel represents one continent, allowing for a comparison of GDP per capita trends between continents. I was able to identify differences in economic development trajectories between regions."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2c.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2c.",
    "text": "Q2c.\n\nProvide ggplot code to replicate the following visualization that describes (1) the relationship between log10(gdpPercap) and lifeExp in year 2007, excluding the continent “Oceania”.\n\nThe size of dots varies by pop."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2d.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q2d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2d.",
    "text": "Q2d.\n\nInterpret the visualization in Q2c.\n\nIn your interpretation, please explain the deviation of Nigeria from the overall relationship between log10(gdpPercap) and lifeExp in Africa. ## People in Nigeria specifically have a lower life expectancy then some of the people that live in Africa. The gdp is off from the baseline of Africa as well."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-titanic_1",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-titanic_1",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_1",
    "text": "Description for Variables in titanic_1\n\nClass: Social class\nSex: Sex\nAge: Age\nSurvived: Survival status from the Titanic disaster.\n\n\n\n\ntitanic_2 &lt;- read_csv(\"https://bcdanl.github.io/data/titanic_2.csv\")"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-titanic_2",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#description-for-variables-in-titanic_2",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_2",
    "text": "Description for Variables in titanic_2\n\npclass: Social class\nsex: Sex\nage: Age\nsurvived: Survival status from the Titanic disaster."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3a.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a.",
    "text": "Q3a.\n\nProvide ggplot code with the titanic_1 data.frame to replicate the following visualization that describes how the distribution of Sex varies by Survived, Age, and Class."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3b.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b.",
    "text": "Q3b.\nMake a detailed comment on the visualization in Q3a."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3c.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3c.",
    "text": "Q3c.\n\nProvide ggplot code with the titanic_2 data.frame to replicate the following visualization that describes how the distribution of age varies by survived, pclass, and sex.\n\nUse the following colors: #4c3642 and #d399e7.\nThe number of bins in each subplot is 25."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3d.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q3d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3d.",
    "text": "Q3d.\nMake a detailed comment on the visualization in Q3c. In the 1st class there is a higher percentage of a female surviving compared to a male. As for the second class citizen females survive more than males but for third class it gets very high for the death rate of a male compared to female."
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4a",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4b",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4c",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don’t know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?"
  },
  {
    "objectID": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4d.",
    "href": "Nicastro_Isabella_danl-399-midterm-makeup-.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?"
  },
  {
    "objectID": "posts/homework_4/homework_4.html",
    "href": "posts/homework_4/homework_4.html",
    "title": "Data Visualization 4",
    "section": "",
    "text": "Question 1\n\nunemp_house_prices &lt;- read_csv(\n  'https://bcdanl.github.io/data/unemp_house_prices.csv')\n\nRows: 25704 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): state\ndbl  (3): unemploy_perc, house_price_index, house_price_perc\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n#| fig-height: 9\n\nunemp_house_prices |&gt; \n  filter(year(date) &gt;= 2008) |&gt; \n  ggplot(aes(x=date , y = unemploy_perc/100)) +\n  geom_line(color='black') +\n  geom_area(fill = 'lightblue') +\n  facet_geo(~ state) +\n  scale_x_date(breaks = '2 years',\n               labels = date_format('%y')) +\n  scale_y_percent() +\n  labs(title = \"\",\n    x = \"\",\n    y = \"Unemployment Rate (%)\") +\n  theme(strip.text.x = element_text(size = 6),\n        axis.text.x = element_text(size = rel(.75)))"
  },
  {
    "objectID": "posts/homework_4/homework_4_Nicastro-Isabella.html",
    "href": "posts/homework_4/homework_4_Nicastro-Isabella.html",
    "title": "Data Visualization 4",
    "section": "",
    "text": "Question 1\n\nunemp_house_prices &lt;- read_csv(\n  'https://bcdanl.github.io/data/unemp_house_prices.csv')\n\nRows: 25704 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): state\ndbl  (3): unemploy_perc, house_price_index, house_price_perc\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n#| fig-height: 9\n\nunemp_house_prices |&gt; \n  filter(year(date) &gt;= 2008) |&gt; \n  ggplot(aes(x=date , y = unemploy_perc/100)) +\n  geom_line(color='black') +\n  geom_area(fill = 'lightblue') +\n  facet_geo(~ state) +\n  scale_x_date(breaks = '2 years',\n               labels = date_format('%y')) +\n  scale_y_percent() +\n  labs(title = \"\",\n    x = \"\",\n    y = \"Unemployment Rate (%)\") +\n  theme(strip.text.x = element_text(size = 6),\n        axis.text.x = element_text(size = rel(.75)))\n\n\n\n\n\n\nQuestion 2\n\nlibrary(ggplot2)\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nelection_panel &lt;- read_csv(\n  'https://bcdanl.github.io/data/election_panel.csv')\n\nRows: 18944 Columns: 10\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): state, state_po, county_name, id, candidate_DEMOCRAT, candidate_REP...\ndbl (4): year, county_fips, pct_DEMOCRAT, pct_REPUBLICAN\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty_map &lt;- socviz::county_map\n\n\nalaska_2000 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2000,\n         pct_DEMOCRAT = NA)\n\nalaska_2004 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2004,\n         pct_DEMOCRAT = NA)\n\nalaska_2008 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2008,\n         pct_DEMOCRAT = NA)\n\nalaska_2012 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2012,\n         pct_DEMOCRAT = NA)\n\nalaska_2016 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2016,\n         pct_DEMOCRAT = NA)\nalaska_2020 &lt;- county_map |&gt; \n  filter(str_sub(id, 1, 2) == '02') |&gt; \n  mutate(year = 2020,\n         pct_DEMOCRAT = NA)\n\nalaska_map &lt;- rbind(alaska_2000,alaska_2004,alaska_2008, alaska_2012,alaska_2016, alaska_2020) |&gt; \n  select(id, long, lat, group, pct_DEMOCRAT, year) |&gt; \n  relocate(id, long, lat, group, pct_DEMOCRAT, year)\n\n\n\nelection_panel &lt;- election_panel |&gt; \n  left_join(county_map, by = c('id'))\n\nWarning in left_join(election_panel, county_map, by = c(\"id\")): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nelection_panel2 &lt;- election_panel |&gt; \n  select(id, long, lat, group, pct_DEMOCRAT, year) \n\n\nelection_panel2 &lt;- election_panel2 |&gt; \n  rbind(alaska_map)\n\np0 &lt;- ggplot(data = election_panel2,\n             mapping = aes(x = long, y = lat,\n                 group = group,\n                 fill = pct_DEMOCRAT))\n\np1 &lt;- p0 + geom_polygon(color = \"gray90\", size = 0.05)  \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np2 &lt;- p1 + scale_fill_gradient(low = 'white', high = '#2E74C0')\n\np2 + theme_map() + facet_wrap(~ year, ncol = 3) +\n    theme(legend.position = \"bottom\",\n          strip.background = element_blank()) +\n    labs(fill = \"Percent Democrat \",\n         title = \"U.S Presidential Election, 2000-2020 \")"
  }
]